//створюємо екзепляр сервера, вказуємо його порт 3000
//налаштований для обробки запитів з домену http://127.0.0.1:5501 - клієнт
const io = require('socket.io')(3000, {
    cors: {
        origin: 'http://127.0.0.1:5501', 
        methods: ['GET', 'POST'], 
    }
})
//зберігання імен користувачів, які підключені до сервера
const users = {}
//подія connection - коли клієкт успішно підключився до сервера
//on слухає подію connection
io.on('connection', socket => {
//socket-функція яка виконується коли відбувається подія connection(новий користувач підключився)
//подія 'new-user' виникає, коли новий користувач 
//вводить своє ім'я. функція socket викликається, коли ця подія відбувається, 
//і вона отримує ім'я користувача  
    socket.on('new-user', name => {
//записує імя в обєкт
    users[socket.id] = name
//відправляє повідомлення всім іншим підключеним користувачам (крім 
//того, хто відправив це повідомлення) про те, що новий користувач підключився до чату
    socket.broadcast.emit('user-connected', name)
//emit-відправляє подію чи повідоблення іншим користувачам
  })
//подія виникає, коли клієнт надсилає нове повідомлення в чаті
//коли ця подія спрацьовує - виконується функція, що приймає message (текст повідомлення) як параметр
    socket.on('send-chat-message', message => {
    socket.broadcast.emit('chat-message', { message: message, name: users[socket.id] })
  })
//подія виникає, коли користувач втрачає з'єднання і розриває з'єднання з сервером
    socket.on('disconnect', () => {
//відправляємо усім користувачам
    socket.broadcast.emit('user-disconnected', users[socket.id])
//видаляємо користувача
    delete users[socket.id]
  })
})